---
---

<!DOCTYPE html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HTML-Go - 简单的 HTML 页面生成器</title>
    <style>
      :root {
        --primary-color: #4f46e5;
        --primary-hover: #4338ca;
        --text-color: #1f2937;
        --light-bg: #f9fafb;
        --border-color: #e5e7eb;
      }
      
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }
      
      body {
        font-family: 'Inter', 'Segoe UI', Roboto, sans-serif;
        color: var(--text-color);
        line-height: 1.6;
        background-color: var(--light-bg);
        min-height: 100vh;
      }
      
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
      }
      
      header {
        text-align: center;
        margin-bottom: 3rem;
      }
      
      h1 {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        color: var(--primary-color);
      }
      
      p {
        font-size: 1.1rem;
        color: #6b7280;
        max-width: 600px;
        margin: 0 auto;
      }
      
      .main-content {
        display: flex;
        flex-direction: column;
        gap: 2rem;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        padding: 2rem;
      }
      
      .input-section {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }
      
      .input-label {
        font-weight: 600;
        font-size: 1.1rem;
      }
      
      .input-container {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
      }
      
      .tabs {
        display: flex;
        border-bottom: 1px solid var(--border-color);
      }
      
      .tab {
        padding: 0.5rem 1rem;
        cursor: pointer;
        border-bottom: 2px solid transparent;
      }
      
      .tab.active {
        border-bottom: 2px solid var(--primary-color);
        font-weight: 600;
      }
      
      textarea {
        width: 100%;
        min-height: 300px;
        padding: 1rem;
        border: 1px solid var(--border-color);
        border-radius: 4px;
        font-family: monospace;
        font-size: 0.9rem;
        resize: vertical;
      }
      
      .file-input {
        display: none;
      }
      
      .file-label {
        display: inline-block;
        padding: 0.75rem 1.5rem;
        background-color: white;
        border: 1px solid var(--border-color);
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s ease;
      }
      
      .file-label:hover {
        background-color: var(--light-bg);
      }
      
      .button-container {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
        margin-top: 1rem;
      }
      
      button {
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s ease;
      }
      
      .primary-button {
        background-color: var(--primary-color);
        color: white;
      }
      
      .primary-button:hover {
        background-color: var(--primary-hover);
      }
      
      .secondary-button {
        background-color: white;
        border: 1px solid var(--border-color);
      }
      
      .secondary-button:hover {
        background-color: var(--light-bg);
      }
      
      .result-section {
        display: none;
        flex-direction: column;
        gap: 1rem;
        margin-top: 2rem;
        padding: 1.5rem;
        background-color: #f0f9ff;
        border-radius: 8px;
        border-left: 4px solid #0ea5e9;
      }
      
      .result-title {
        font-weight: 600;
        font-size: 1.2rem;
        color: #0369a1;
      }
      
      .url-container {
        display: flex;
        align-items: center;
        gap: 1rem;
        background-color: white;
        padding: 0.75rem;
        border-radius: 4px;
        border: 1px solid #bae6fd;
      }
      
      .url-text {
        flex-grow: 1;
        font-family: monospace;
        word-break: break-all;
      }
      
      .copy-button {
        padding: 0.5rem 1rem;
        background-color: #0ea5e9;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.9rem;
        transition: all 0.3s ease;
      }
      
      .copy-button:hover {
        background-color: #0284c7;
      }
      
      .error-message {
        display: none;
        padding: 1rem;
        background-color: #fee2e2;
        border-left: 4px solid #ef4444;
        border-radius: 4px;
        color: #b91c1c;
        margin-bottom: 1rem;
      }
      
      footer {
        text-align: center;
        margin-top: 3rem;
        padding: 1rem;
        color: #6b7280;
        font-size: 0.9rem;
      }
      
      @media (max-width: 768px) {
        .container {
          padding: 1rem;
        }
        
        h1 {
          font-size: 2rem;
        }
        
        .main-content {
          padding: 1.5rem;
        }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <header>
        <h1>HTML-Go</h1>
        <p>粘贴您的 HTML 代码，生成一个可分享的链接</p>
      </header>
      
      <div class="main-content">
        <div class="error-message" id="error-container"></div>
        
        <div class="input-section">
          <div class="input-label">HTML 内容</div>
          <div class="input-container">
            <div class="tabs">
              <div class="tab active" id="code-tab">代码</div>
              <div class="tab" id="file-tab">文件</div>
            </div>
            
            <textarea id="html-input" placeholder="在这里粘贴您的 HTML 代码..."></textarea>
            
            <div class="file-container" style="display: none;">
              <label for="html-file" class="file-label">选择 HTML 文件</label>
              <input type="file" id="html-file" class="file-input" accept=".html,.htm">
              <span id="file-name"></span>
            </div>
          </div>
        </div>
        
        <div class="button-container">
          <button class="secondary-button" id="clear-button">清除</button>
          <button class="primary-button" id="generate-button">生成链接</button>
        </div>
        
        <div class="result-section" id="result-section">
          <div class="result-title">您的链接已生成</div>
          <div class="url-container">
            <div class="url-text" id="result-url"></div>
            <button class="copy-button" id="copy-button">复制</button>
          </div>
          <p>此链接可以直接分享给他人访问您的 HTML 页面。</p>
        </div>
      </div>
      
      <footer>
        <p>HTML-Go &copy; 2025 - 一个简单的 HTML 页面生成器</p>
      </footer>
    </div>
    
    <script>
      // DOM 元素
      const codeTab = document.getElementById('code-tab');
      const fileTab = document.getElementById('file-tab');
      const htmlInput = document.getElementById('html-input');
      const fileInput = document.getElementById('html-file');
      const fileContainer = document.querySelector('.file-container');
      const fileName = document.getElementById('file-name');
      const clearButton = document.getElementById('clear-button');
      const generateButton = document.getElementById('generate-button');
      const resultSection = document.getElementById('result-section');
      const resultUrl = document.getElementById('result-url');
      const copyButton = document.getElementById('copy-button');
      const errorContainer = document.getElementById('error-container');
      
      // 切换输入方式
      codeTab.addEventListener('click', () => {
        codeTab.classList.add('active');
        fileTab.classList.remove('active');
        htmlInput.style.display = 'block';
        fileContainer.style.display = 'none';
      });
      
      fileTab.addEventListener('click', () => {
        fileTab.classList.add('active');
        codeTab.classList.remove('active');
        htmlInput.style.display = 'none';
        fileContainer.style.display = 'block';
      });
      
      // 文件选择处理
      fileInput.addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (file) {
          fileName.textContent = file.name;
          
          const reader = new FileReader();
          reader.onload = (e) => {
            htmlInput.value = e.target.result;
          };
          reader.readAsText(file);
        }
      });
      
      // 清除按钮
      clearButton.addEventListener('click', () => {
        htmlInput.value = '';
        fileInput.value = '';
        fileName.textContent = '';
        resultSection.style.display = 'none';
        errorContainer.style.display = 'none';
      });
      
      // 生成链接
      generateButton.addEventListener('click', async () => {
        const htmlContent = htmlInput.value.trim();
        
        if (!htmlContent) {
          showError('请输入 HTML 内容');
          return;
        }
        
        try {
          // 调用 API 创建页面
          const response = await fetch('/api/pages/create', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ htmlContent }),
          });
          
          const data = await response.json();
          
          if (data.success) {
            const url = `${window.location.origin}/view/${data.urlId}`;
            resultUrl.textContent = url;
            resultSection.style.display = 'flex';
            errorContainer.style.display = 'none';
          } else {
            showError(data.error || '生成链接失败');
          }
        } catch (error) {
          console.error('生成链接错误:', error);
          showError('生成链接时发生错误');
        }
      });
      
      // 复制链接
      copyButton.addEventListener('click', () => {
        const url = resultUrl.textContent;
        navigator.clipboard.writeText(url)
          .then(() => {
            copyButton.textContent = '已复制';
            setTimeout(() => {
              copyButton.textContent = '复制';
            }, 2000);
          })
          .catch((error) => {
            console.error('复制错误:', error);
            showError('复制链接失败');
          });
      });
      
      // 显示错误信息
      function showError(message) {
        errorContainer.textContent = message;
        errorContainer.style.display = 'block';
      }
    </script>
  </body>
</html>
